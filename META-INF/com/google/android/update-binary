#!/sbin/sh
# AIK-Mobile Installer Script: Recovery Flashable Zip
# osm0sis @ xda-developers

OUTFD=/proc/self/fd/$2;
ZIP="$3";
ui_print() { echo -e "ui_print $1\nui_print" > $OUTFD; }
show_progress() { echo "progress $1 $2" > $OUTFD; }
set_progress() { echo "set_progress $1" > $OUTFD; }
file_getprop() { grep "^$2" "$1" | cut -d= -f2; }
set_perm() {
  files=$(echo $* | awk '{ print substr($0, index($0,$4)) }');
  for i in $files; do
    chown $1.$2 $i; chown $1:$2 $i;
    chmod $3 $i;
  done;
}
set_perm_recursive() {
  dirs=$(echo $* | awk '{ print substr($0, index($0,$5)) }');
  for i in $dirs; do
    chown -R $1.$2 $i; chown -R $1:$2 $i;
    find "$i" -type d -exec chmod $3 {} +;
    find "$i" -type f -exec chmod $4 {} +;
  done;
}
abort() {
  ui_print " ";
  ui_print "Your system has not been changed.";
  ui_print " ";
  ui_print "Script will now exit...";
  ui_print " ";
  umount /system;
  umount /data;
  umount /cache;
  exit 1;
}

ui_print " ";
ui_print "Android Image Kitchen - Mobile Edition";
ui_print "Installer Script";
ui_print "by osm0sis @ xda-developers";
ui_print "********************************************"
ui_print "*                AIK-mobile                *"
ui_print "*               M.O.D Edition              *"
ui_print "*                                          *"
ui_print "*                     v1                   *"
ui_print "*                                          *"
ui_print "*                                          *"
ui_print "*                                          *"
ui_print "*                                 - Rivv - *"
ui_print "********************************************"
show_progress 1.34 0;

ui_print " ";
ui_print "Mounting...";
mount -o ro /system;
mount /data;
mount /cache;
set_progress 0.2;

ui_print " ";
ui_print "Extracting files...";
mkdir -p /tmp/aik-mobile;
cd /tmp/aik-mobile;
unzip -o "$ZIP";
set_progress 0.3;

ui_print " ";
ui_print "Installing to /data/local/AIK-mobile/ ...";
abi=`getprop ro.product.cpu.abi`;
case $abi in
  arm*|x86*|mips*) ;;
  *) abi=`file_getprop /default.prop ro.product.cpu.abi`;;
esac;
case $abi in
  arm*|x86*|mips*) ;;
  *) abi=`file_getprop /system/build.prop ro.product.cpu.abi`;;
esac;
case $abi in
  arm64*) arch=arm64;;
  arm*) arch=arm;;
  x86_64*) arch=x86_64;;
  x86*) arch=x86;;
  mips64*) arch=mips64;;
  mips*) arch=mips;;
  *) ui_print "Unknown architecture: $abi"; abort;;
esac;
ui_print "Using architecture: $arch";
cp -rf data/* /data;
cp -rf bin/$arch/* /data/local/AIK-mobile/bin/;
rm -rf /tmp/aik-mobile;
set_perm_recursive 0 0 0755 0755 "/data/local/AIK-mobile";
set_perm 0 0 0644 "/data/local/AIK-mobile/authors.txt" "/data/local/AIK-mobile/bin/magic";
set_progress 0.8;

ui_print " ";
suimg=$(ls /cache/su.img /data/su.img 2>/dev/null);
if [ "$suimg" ]; then
  test ! -e /su && mkdir /su;
  mount -t ext4 -o rw,noatime $suimg /su;
  for i in 0 1 2 3 4 5 6 7; do
    case `mount` in
      *" /su "*) break;;
    esac;
    loop=/dev/block/loop$i;
    mknod $loop b 7 $i;
    losetup $loop $suimg;
    mount -t ext4 -o loop $loop /su;
  done;
  target=/su/bin;
else
  mount -o rw,remount /system;
  target=/system/xbin;
fi;
ui_print "Linking helper script $target/aik ...";
cp -rpf "/data/local/AIK-mobile/bin/aik" "$target/aik";
cp -rpf "/data/local/AIK-mobile/bin/backup" "$target/backup";
set_progress 1.0;

ui_print " ";
ui_print "Unmounting...";
umount /su;
umount /system;
umount /data;
umount /cache;
set_progress 1.2;

ui_print " ";
ui_print "Done!";
ui_print " ";
ui_print "Run 'aik' from the commandline when booted";
ui_print "then 'unpack' to get started";
set_progress 1.34;
exit 0;

